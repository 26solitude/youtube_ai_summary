package org.example.youtubeaisummary.service;


import io.github.thoroldvix.api.*;
import io.github.thoroldvix.internal.TranscriptApiFactory;
import org.springframework.stereotype.Service;

import java.util.Optional;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.StreamSupport;


@Service
public class SubtitleService {

    private static final Pattern ID_PATTERN =
            Pattern.compile("(?:youtu\\.be/|v=)([A-Za-z0-9_-]{11})");
    private final YoutubeTranscriptApi api = TranscriptApiFactory.createDefault();

    public String fetchSubs(String url) {
        String videoId = extractVideoId(url);

        try {
            TranscriptList transcriptList = api.listTranscripts(videoId);

            Optional<Transcript> autoGeneratedTranscript = StreamSupport.stream(transcriptList.spliterator(), false)
                    .filter(Transcript::isGenerated)
                    .findFirst();

            if (autoGeneratedTranscript.isEmpty()) {
                throw new RuntimeException("이 영상에는 자동 생성된 자막이 없습니다.");
            }

            TranscriptContent transcriptContent = autoGeneratedTranscript.get().fetch();

            TranscriptFormatter textFormatter = TranscriptFormatters.textFormatter();
            return textFormatter.format(transcriptContent);

        } catch (TranscriptRetrievalException e) {
            throw new RuntimeException("자막을 가져오는 중 오류가 발생했습니다: " + e.getMessage(), e);
        }
    }

    private String extractVideoId(String url) {
        Matcher m = ID_PATTERN.matcher(url);
        if (!m.find()) {
            throw new IllegalArgumentException("잘못된 YouTube URL 형식입니다: " + url);
        }
        return m.group(1);
    }
}