package org.example.youtubeaisummary.service;


import io.github.thoroldvix.api.*;
import org.example.youtubeaisummary.dto.JobStatusDto;
import org.example.youtubeaisummary.repository.InMemoryJobRepository;
import org.example.youtubeaisummary.vo.YoutubeVideo;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

import java.util.Optional;
import java.util.stream.StreamSupport;

@Service
public class SubtitleService {
    private final YoutubeTranscriptApi api;
    private final InMemoryJobRepository jobRepository;

    public SubtitleService(YoutubeTranscriptApi api, InMemoryJobRepository jobRepository) {
        this.api = api;
        this.jobRepository = jobRepository;
    }

    @Async("subtitleTaskExecutor")
    public void fetchSubs(String jobId, YoutubeVideo video) {
        try {
            jobRepository.updateJob(jobId, JobStatusDto.JobStatus.PROCESSING, null);

            String videoId = video.getVideoId();
            TranscriptList transcriptList = api.listTranscripts(videoId);

            Optional<Transcript> autoGeneratedTranscript = StreamSupport.stream(transcriptList.spliterator(), false)
                    .filter(Transcript::isGenerated)
                    .findFirst();

            if (autoGeneratedTranscript.isEmpty()) {
                throw new RuntimeException("이 영상에는 자동 생성된 자막이 없습니다.");
            }

            TranscriptContent transcriptContent = autoGeneratedTranscript.get().fetch();
            TranscriptFormatter textFormatter = TranscriptFormatters.textFormatter();
            String result = textFormatter.format(transcriptContent);

            jobRepository.updateJob(jobId, JobStatusDto.JobStatus.COMPLETED, result);

        } catch (Exception e) {
            jobRepository.updateJob(jobId, JobStatusDto.JobStatus.FAILED, e.getMessage());
        }
    }
}